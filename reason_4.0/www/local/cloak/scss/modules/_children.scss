// Children, Grandchildren, and Sibling Styles
// Cloak, v1

// 1. CHILDREN
// 2. CHILDREN & GRANDCHILDREN 
// 3. CHILDREN with IMAGES
// 		3a. CHILDREN with IMAGES Column Layout
// 4. SIBLINGS 

// 1. CHILDREN
// Basic Shows Children w/ or w/out descriptions.

.childrenList {
	@include zero-out();
	margin-bottom: $horizontal-gutter;

	> li {
		list-style-type: none;
		background: $white-smoke;
		margin-bottom: rem-calc(1);

		a[href] {
			padding: $horizontal-gutter/3 $column-gutter/3;
			display: block;

			h4 {
				line-height: inherit;
				margin: 0;
				font-weight: 700;
				color: $primary-color;
			}

			&:hover {
				background: darken($white-smoke, 8%);
			}
		}

		.childDesc {
			color: lighten($body-font-color, 15%);
			font-family: $body-font-family;
			font-weight: 300;
			font-size: rem-calc(14);
		}
	}

	a:hover {
		//text-decoration: underline;
		//background: red;
	}
}

// 2. CHILDREN & GRANDCHILDREN 

#childrenAndGrandchildren .childrenList {

	> li {

		> h3,
		> h4 {
			background: $aluminum;
			margin: 0 0 $horizontal-gutter/3;
		}

		> .childDesc {
			padding: 0 $column-gutter/3 $horizontal-gutter/3;
		}

		ul {
			padding: 0 $column-gutter/3;
			margin: 0;
			@include clearfix;

			li {
				border: none;
				list-style-type: none;
				margin-bottom: $horizontal-gutter/3;
			}

			strong,
			h4 {
				font-family: $header-font-family;
				font-weight: 400;
				padding: 0;
				margin: 0;

				a {
					padding: 0;

					&:hover {
						background: none;
					}
				}
			}

			.childDesc {
				margin: 0;
				font-size: rem-calc(14);
			}
		}
	}
}

// 3. CHILDREN with IMAGES

.childrenListWithImages {

	@include clearfix;
	margin: 0;
	margin-left: - $column-gutter/2;
	margin-bottom: $horizontal-gutter/2;

	// Children with Images are displayed in columns, with heading & text below each image.
	// We can override this layout with custom styles in specific sites or locations.
	// The image size parameters can be set in cloak.php (See GLOBAL MODULE SETTINGS) or in a local page type.

	li {
		clear: both;
		display: block;
		margin-bottom: $horizontal-gutter/2;
		background: none;

		a,
		a[href] {  // Since the module uses the new HTML5 markup, the anchor is wrapped around both the heading and description.
			overflow: hidden;
			background: $silver;
			margin: 0;
			margin-left: $column-gutter/2;
			display: block;
			@include clearfix;
			padding: 0;

			&:before {
				content: "";
				position: static;
				height: 0;
				display: none !important;
			}

			&:hover {

				h4 {
					text-decoration: underline;
				}	
			}

			h4 {
				padding: $horizontal-gutter/3 $column-gutter/3;
			}

			.childDesc {
				padding: 0 $column-gutter/3 $horizontal-gutter/3;
			}
		}
	}
}

// 3a. CHILDREN with IMAGES Column Layout
// We determine the number of children to show per row based on the number of columns on a page.

// MINISITE COLUMN LAYOUT: 3 column layout.
.containsConRelNav .childrenListWithImages  {
	li {
		@media #{$small-high-up} {  // 2 per row for small-high screens
			width: 50%;
			float: left;
			clear: none;
			
			&:nth-child(2n+1) {
				clear: left;
			}
		}
	}
}

// MINISITE COLUMN LAYOUT: 2 column layout.
// Page has content and navigation.
// Page has content and related.
.containsConNav .childrenListWithImages,
.containsConRel .childrenListWithImages {
	li {

		@media #{$small-high-up} {  // 2 per row for small-high screens
			width: 50%;
			float: left;
			clear: none;
			
			&:nth-child(2n+1) {
				clear: left;
			}
		}

		@media #{$medium-up} { // 3 per row for medium screens
			width: 33.33333%;

			&:nth-child(2n+1) {
				clear: none;
			}

			&:nth-child(3n+1) {
				clear: left;
			}
		}

		@media #{$xlarge-up} { // 4 per row for xl screens
			width: 25%;

			&:nth-child(3n+1) {
				clear: none;
			}
			
			&:nth-child(4n+1) {
				clear: left;
			}
		}
	}
}

// MINISITE COLUMN LAYOUT: 1 column layout.
// Page has content.
.containsCon .childrenListWithImages {
	li {

		@media #{$small-high-up} {  // 2 per row for small-high screens
			width: 50%;
			float: left;
			clear: none;
			
			&:nth-child(2n+1) {
				clear: left;
			}
		}

		@media #{$medium-up} { // 3 per row for medium screens
			width: 33.33333%;

			&:nth-child(2n+1) {
				clear: none;
			}

			&:nth-child(3n+1) {
				clear: left;
			}
		}

		@media #{$large-up} { // 4 per row for large screens
			width: 25%;

			&:nth-child(3n+1) {
				clear: none;
			}
			
			&:nth-child(4n+1) {
				clear: left;
			}
		}
	}
}

// 4. SIBLINGS

.siblingsModule {

	.siblingList {
		@include zero-out();
		margin-bottom: $horizontal-gutter;
		font-size: rem-calc(14);

		li {
			list-style-type: none;
			background: $white-smoke;
			margin-bottom: rem-calc(1);

			a,
			strong {
				display: block;
				padding: rem-calc(8) rem-calc(12);
			}

			a:hover {
				background: darken($white-smoke, 8%);
			}

			strong {
				background: darken($white-smoke, 6%);
				color: $primary-color;
			}
		}
	}
}