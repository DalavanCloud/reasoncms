//
// FORM STYLES
//
// @author Nathan Dirks
//

// Foundation imports
@import "foundation/components/forms";
@import "foundation/components/buttons";
@import "foundation/components/alert-boxes";

// Luther imports
@import "extends";
@import "mixins";

// 1. Foundation Form Styles
// 2. Luther Form Styles & Foundation Overrides

// 1. FOUNDATION FORM STYLES

// In _settings.scss, we set $include-html-form-classes: false to keep from including all the non-symantic form classes that we don't use.
// To get the form classes we do want, we include the Foundation form styles from components/_forms.scss here.

.form,
#form,
form {

	// Sets a header font for all possible labels
	div,
	.words,
	input,
	label,
	select {
		font-family: $header-font-family;
	}

	// Basic styling on all basic form elements
	input[type="text"],
	input[type="password"],
	input[type="date"],
	input[type="datetime"],
	input[type="datetime-local"],
	input[type="month"],
	input[type="week"],
	input[type="email"],
	input[type="number"],
	input[type="search"],
	input[type="tel"],
	input[type="time"],
	input[type="url"],
	textarea,
	.loki div.iframe_wrapper,
	.loki textarea {
		-webkit-appearance: none;
		-webkit-border-radius: 0;
		border-radius: 0;
		@include form-element;
		@if not $input-include-glowing-effect {
		  @include single-transition(all, 0.15s, linear);
		}
		margin-bottom: 0;
	}

	// Set a max width for inputs (otherwise they start looking absurd)
	input[type="text"],
	input[type="password"],
	input[type="date"],
	input[type="datetime"],
	input[type="datetime-local"],
	input[type="month"],
	input[type="week"],
	input[type="email"],
	input[type="number"],
	input[type="search"],
	input[type="tel"],
	input[type="time"],
	input[type="url"] {
		max-width: 600px;
	}

	// Adjust margin for form elements below
	input[type="file"] {
	//select {
		margin: 0 0 $form-spacing 0;
	}

	input[type="checkbox"],
	input[type="radio"] {

	}

	// input[type="checkbox"] + label,
	// input[type="radio"] + label {
	// 	display: inline-block;
	// 	margin-#{$default-float}: $form-spacing * .5;
	// 	margin-#{$opposite-direction}: $form-spacing;
	// 	margin-bottom: 0;
	// 	vertical-align: baseline;
	// }

	// Normalize file input width
	input[type="file"] {
		width: 100%;
	}

	// Basic fieldset styling
	fieldset {
		@include fieldset;
	}

	// Basic select styling
	select {
		//-webkit-appearance: none !important;
		background:
        $select-bg-color;
        //url('data:image/svg+xml;base64, PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSI2cHgiIGhlaWdodD0iM3B4IiB2aWV3Qm94PSIwIDAgNiAzIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA2IDMiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxwb2x5Z29uIHBvaW50cz0iNS45OTIsMCAyLjk5MiwzIC0wLjAwOCwwICIvPjwvc3ZnPg==') no-repeat;
		background-position-x: 97%;
		background-position-y: center;
		border: $input-border-width $input-border-style $input-border-color;
		padding: $form-spacing / 2;
		font-size: $input-font-size;
		@include radius(0);
		&.radius {
			@include radius($global-radius);
		}
		&:hover {
			background:
          		darken($select-bg-color, 3%);
          		//url('data:image/svg+xml;base64, PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSI2cHgiIGhlaWdodD0iM3B4IiB2aWV3Qm94PSIwIDAgNiAzIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA2IDMiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxwb2x5Z29uIHBvaW50cz0iNS45OTIsMCAyLjk5MiwzIC0wLjAwOCwwICIvPjwvc3ZnPg==') no-repeat;
			background-position-x: 97%;
			background-position-y: center;
			border-color: $input-focus-border-color;
		}
		width: auto;
		max-width: 100%;
	}

	textarea,
	.loki div.iframe_wrapper,
	.loki textarea
	 {
		height: auto;
	}

}

// 2. LUTHER FORM STYLES & Foundation overrides
// Form styles unique to Reason form markup

.form,
#form,
form {

	.submitSection {
		@include grid-row();
		padding: $form-spacing 0;
		margin: 0 !important;
	}

	#discoLinear .formElement {
		margin: 0;

		.words {
			@include form-label;
		}
	}

	// Each form element
	.formElement {
		@include grid-row();
		padding: $form-spacing 0;

		// Hides the "* = required field" text. People know what asterisks mean.
		&#requiredtextItem {
			display: none;
			@media #{$medium-up} {
				padding-left: rem-calc(28);
			}
		}

		// Changes the text label bg to red if there's an error
		&.error {
			background: none !important; // removes Reason's defult yellow error row
			padding: $form-spacing 0 !important;

			.words {
				.labelText {
					@include border-radius(2px);
					padding: rem-calc(4) rem-calc(6px);
					background: lighten($alert-color, 50%) !important;
				}
			}
		}

		// Styles for the "content" row -- often used for headings
		&.noLabel {
			//border-top: 4px solid $lc-grey;

			h1,
			h2,
			h3 { // Styles headings to look the same
				font-size: $h3-font-size;
				color: $lc-blue-light;
				//color: $body-font-color;
			}

			> :last-child { // removes bottom spacing from the last element to keep row spacing even
				margin: 0;
				padding: 0;
			}
		}

		// Labels
		.words {
			@include form-label;
			font-weight: 600;
			display: inline-block;

			.labelText {
				display: inline-block;
			}

			.requiredIndicator {
				font-weight: 300;
				display: inline-block;
				padding-left: rem-calc(4);
				color: darken($lc-grey, 40%);
			}
		}

		.element {
			//background: #efefef !important;

			// .inlineElement,
			// input[size="2"],
			// input[size="4"] {

			// 	input {
			// 		width: auto !important;
			// 		max-width: auto !important;
			// 		display: inline;
			// 	}
			// }

			input[size="2"],
			input[size="4"],
			input[size="12"],
			input[size="15"],
			input[size="20"] {
				//background: orange !important;
				width: auto !important;
				max-width: auto !important;
				display: inline-block;
				margin: 0 rem-calc(12) 0 0;
			}

			input[size="2"],
			input[size="4"]
			{
				margin: 0 rem-calc(6);
			}
		}

		.comment {
			padding: $form-spacing 0;
			font-weight: 300;
			font-style: italic;

			&.smallText {
				font-size: rem-calc(14);
			}
		}

		// > input[type="checkbox"] {
		// 	margin: 0.5em .75em .5em 1em;
		// 	float: left;
		// 	display: block;

		// 	+ label {
		// 		//display: inline;
		// 		display: block;
		// 		float: left;
		// 		background: red;
		// 	}
		// }

		 > input[type="checkbox"] {
		 	margin: 0.5em .75em .5em 1em;
			// float: left;
			// display: block;
			// display: inline;
		 }

		> .radioItem {
			display: inline-block;
		}

		input[type="checkbox"] + label,
		input[type="radio"] + label {
			display: inline;
			margin-left: 50px;
			// margin-#{$default-float}: $form-spacing * .5;
			// margin-#{$opposite-direction}: $form-spacing;
			// margin-bottom: 0;
			// vertical-align: baseline;
		}

		// RADIO BUTTONS, ungrouped
		.radioItem {
			margin-right: rem-calc(18);

			.radioButton {
				margin: 0.5em .75em .5em 1em;
			}

		}

		/*@media #{$medium-up} {  // Styles for left-aligned labels and right-aligned inputs
			padding: $form-spacing 0;

			.words {
			  @include grid-column($columns: 4, $float: left);
			 }

			.element {
				@include grid-column($columns: 12);
			}

			td {
				padding: .5em 1em .5em 0;
			}
		}*/

		// Loki comment editor
		.loki {
			border: none;
			width: 100%;
			padding: 0;
			background: none !important;

			.toolbar {
				a {
					border: 1px solid darken($lc-grey, 10%);
					width: rem-calc(34);
					display: inline-block;
					margin: 0 0 rem-calc(8);
					position: relative;

					@media #{$medium-up} {
						width: rem-calc(40);
					}

					&:hover {
						background: $lc-grey;
						border: 1px solid darken($lc-grey, 15%);
					}

					&:first-child {
						@include border-left-radius(4px);
					}

					&:last-child {
						@include border-right-radius(4px);
					}

					& + a {
						margin-left: -1px;
					}

					&:hover,
					&:active {
						z-index: 100;
					}

					&:active {
						@include box-shadow(rgba(#000, .125) 0 3px 5px inset);
					}

					img,
					span {
						margin: 8px auto;
						display: block;

						@media #{$medium-up} {
							margin: 10px auto;
						}

					}
				}
			}

			div.iframe_wrapper,
			textarea {
				//border: 1px solid $lc-grey;
				//border: 1px solid;
			}

			.grippy_wrapper {
				display: none;
			}
		}

		&#commentcontentItem { // Let's not stripe the blog comment form -- it looks wonky with just two fields.
			background: $lc-white;

			&:nth-child(even) {
			 	background: none !important;

				&.error {
					background: #FFF !important;
				}
			}
		}

		// Honeypot captcha fields. We hide these.
		&#tarbabypreItem,
		&#tarbabyItem,
		&#noturlItem,
		&#antlionItem {
		    display: none;
		}
	}

	//  Removes deafult table styles from radios and checkboxes
	//  A temporary fix until we get tables out of radio/checkbox markup
	table {
		margin-bottom: 0;
		border: none;
		background: none;

		tr.even,
		tr.alt,
		tr:nth-of-type(2n) {
			background: none !important;
		}

		td {
			padding: .5em 0 .5em 1em;
		}
	}

	input[type="submit"] {
		@include default-button();
	}
}

// Submission errors -- displayed at the top of the form.
#discoErrorNotice {
	font-family: $header-font-family;
	margin-bottom: $column-gutter/2;

	h3 {
		font-size: $font-size-18;
		font-weight: 600;
		margin: 0 0 rem-calc(6);
		color: $alert-color !important;

		&:before {
			  @extend .fa;
			  content: $fa-var-exclamation-triangle;
			  margin-right: rem-calc(12);
		}
	}

	ul {
		@include alert($bg: lighten($alert-color, 50%), $radius: $global-radius);
		color: lighten($body-font-color, 15%);
		margin: 0;
		font-weight: 600;

		li {
			display: inline;

			a {font-weight: 400; text-decoration: underline;}
		}
	}
}

//Remove Spacing above forms in contentPost section
.contentPost #form {
	margin-top: $column-gutter * -1;
}

//Credit card forms
#creditcardtypeiconItem{
	.formCCType{
		font-size: 35px;
		margin-right: 5px;

		&.nonSelectedCCType{
			color: #C9C9C9;
		}
	}

	.fa-cc-visa.selectedCCType{
		color: #273990;
	}
	.fa-cc-mastercard.selectedCCType{
		color: #EC2C20;
		//color: #FCAA2C;
	}
	.fa-cc-amex.selectedCCType{
		color: #0871BC;
	}
	.fa-cc-discover.selectedCCType{
		color: #FF6600;
	}
}

#creditcardtypeItem{
	display:none;
}
