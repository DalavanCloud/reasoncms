//
// MODULE STYLES
//
// @author Nathan Dirks
//
// Wherever possible, we don't inlclude Reason default module styles (via $include_modules_css = false 
// in luther.php or by setting "include css" parameters to false in page_types_local.php).  We do this 
// to keep from having to override legacy styles. But some modules require styles for basic funcationalty, 
// and are included in <head> when they run.
//
// Table of Contents...
// 1. Featrues
// 2. Publications
// 3. Video (AV)
// 4. Forms
// 5.

// Foundation imports
@import "settings";
@import "foundation/components/grid";
@import "foundation/components/flex-video";
@import "foundation/components/forms";
@import "foundation/components/buttons";
@import "foundation/components/alert-boxes";

// Compass imports
@import "compass/css3";

// 1. Features 
//////////////////////////////////////

 #contentFeature {
	margin: 0 -2em $column-gutter;
	
	@media #{$medium-up} {
		//margin: 0 0 $column-gutter;
	}
	@media #{$large-up} { 
		margin: 0 0 $column-gutter/1.5;
	}
}
 
.featuresModule {

	.feature {

		.featureInfo,
		h3 {
			color: $lc-white !important;
		}

		.featureInfoWrap {
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			background: rgb(0,0,0);
			background: rgba(0,0,0,.75);
			padding: $column-gutter/6 $column-gutter/1.25;

			@media #{$medium-up} {
				position: static;
				padding: 0;
			}

		}

		.featureInfo {
			position: relative;
			background: none !important;
			padding: $column-gutter/6 0;

			@media #{$medium-up} {
				position: absolute;
				background: rgb(0,0,0) !important;
				background: rgba(0,0,0,.75) !important;
				padding: $column-gutter/3 $column-gutter/1.25;
			}

			@media #{$large-up} {
				padding: $column-gutter/3 $column-gutter/1.75;
			}

			.featureTitle {
				line-height: 1;
				font-size: $font-size-14;
					
				@media #{$medium-up} {
					font-size: $h3-font-size;
					
					display: inline;
				}

				a,
				.noLink {
					@extend .zero-out;

					@media #{$medium-up} {
						display: inline;
						/*loat: left;*/
					}	
				}
			}

			.featureText { // hide description text on mobile 
				display: none;

				@media #{$medium-up} { // show
					clear: none;
					display: inline;
					/*float: left;*/
					line-height: $h3-font-size;
					padding-top: 16px;
				}

				a {
					padding: 0;
					display: inline;
				}

				&:before {
					content:"\203A";
					margin: 0 .5rem;
					display: inline-block;
				}
			}
		}	

		.featureNavWrap {
			position: relative;
			display: block;
			padding: $column-gutter/6 0;
			@include clearfix;
			
			@media #{$medium-up} { // show
				margin-top: 0;
				padding: $column-gutter/6 0;
				position: absolute;
				top: $column-gutter/2;
				right: $column-gutter/2;
			}

			.featureNav {
				@extend .zero-out;
			}

			.play-pause,
			.prev,
			.next {
				display: none;
			}

			.navBlock {

				.navItem {

					width: 14px;
					height: 14px;
					display: block;
					float: left;
					background: rgba(255,255,255,.5);
					@include border-radius($global-rounded);
					@include box-shadow(0 0 4px #000);
					margin: 0 $column-gutter/3.5 0 0;

					&.current {
						background: #FFF;
					}

					@media #{$medium-up} {
						width: 20px;
						height: 20px;
						margin: 0 0 0 $column-gutter/3.5;
					}

					span {
						@extend .screenreader;
					}
				}
			}	
		}
	}
}

// 2. Publications
//////////////////////////////////////
 
.publication .persistent {
 	display: none;
}

// 3. Video
//////////////////////////////////////

 .video {
 	@include flex-video-container();
 }

 // 4. Forms
//////////////////////////////////////

#form {

// In _settings.scss, we set $include-html-form-classes: false to keep from including all the non-symantic form classes that we don't use.
// Instead, we include the Foundation form styles we DO need from components/_forms.scss here.

	div,
	.words,
	input,
	label,
    select {
		font-family: $header-font-family;
	}

    // Basic styling on all basic form elements
    input[type="text"],
    input[type="password"],
    input[type="date"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="month"],
    input[type="week"],
    input[type="email"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="time"],
    input[type="url"],
    textarea {
      -webkit-appearance: none;
      -webkit-border-radius: 0;
      border-radius: 0;
      @include form-element;
      @if not $input-include-glowing-effect {
          @include single-transition(all, 0.15s, linear);
      }
      margin-bottom: 0;
    }

    input[type="text"],
    input[type="password"],
    input[type="date"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="month"],
    input[type="week"],
    input[type="email"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="time"],
    input[type="url"] {max-width: 600px;}

     // Adjust margin for form elements below
    input[type="file"],
    select {
      margin: 0 0 $form-spacing 0;
    }

    input[type="checkbox"],
    input[type="radio"] {}

    input[type="checkbox"] + label,
    input[type="radio"] + label {
      display: inline-block;
      margin-#{$default-float}: $form-spacing * .5;
      margin-#{$opposite-direction}: $form-spacing;
      margin-bottom: 0;
      vertical-align: baseline;
    }

    // Normalize file input width
    input[type="file"] {
      width:100%;
    }

    // Basic fieldset styling
    fieldset {
      @include fieldset;
    }

    // Basic select styling
    select {
      -webkit-appearance: none !important;
      background: $select-bg-color;
      background-position-x: 97%;
      background-position-y: center;
      border: $input-border-width $input-border-style $input-border-color;
      padding: $form-spacing / 2;
      font-size: $input-font-size;
      @include radius(0);
      &.radius { @include radius($global-radius); }
      &:hover {
        background: darken($select-bg-color, 3%);
        background-position-x: 97%;
        background-position-y: center;
        border-color: $input-focus-border-color;
      }
      width: auto;
      max-width: 100%;
    }

    textarea {
    	height: auto;
    }

// Luther custom styles & Foundation overrides
// Custom form styles unique to Reason form markup



	.formElement {
		@include grid-row();
		padding: $form-spacing 0;
		margin-bottom: 1px;

		&:nth-child(even) {
			background: lighten($lc-grey, 5%);
		}

		.words {
			@include form-label;
			font-weight: 600;

			.requiredIndicator {
				font-weight: 300;
				display: inline-block;
				padding-left: rem-calc(4);
				color: darken($lc-grey, 40%);
			}
		}

		td {
			padding: .5em 0 .5em 1em; 
		}

		@media #{$medium-up} {

			.words {
			//@include prefix-postfix-base();
			  @include grid-column($columns: 4, $float:left);
			  //text-align: right;
			}

			.element {
				@include grid-column($columns: 12);
			}

			td {
				padding: .5em 1em .5em 0; 
			}

		}

	}



	input[type="text"] {
		
	}

	table tr {}

	#discoErrorNotice {
		@include alert($bg: $alert-color, $radius: 6px);
		color: $lc-red !important;

		&:before {
			  display: inline-block;
			  font-family: FontAwesome;
			  font-style: normal;
			  font-weight: normal;
			  line-height: 1;
			  -webkit-font-smoothing: antialiased;
			  -moz-osx-font-smoothing: grayscale;
			  content: "\f071"; // fa-var-exclamation-triangle
		}

		h3 {
			font-size: $font-size-18;
			
			font-weight: 600;
			margin: 0 rem-calc(6) 0 0;
			display: inline;
			display: none;
		}

		ul {
			margin: 0;
			display: inline;
			font-weight: 600;

			li {
				display: inline;

				a {font-weight: 400; text-decoration: underline;}
			}
		}
	}

}









